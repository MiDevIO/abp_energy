package com.misit.abpenergy.Main.ViewModelimport android.content.Contextimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport com.misit.abpenergy.Main.DataSource.DataUsersSourceimport com.misit.abpenergy.Main.Model.DataUsersModelimport kotlinx.coroutines.GlobalScopeimport kotlinx.coroutines.asyncimport kotlinx.coroutines.launchclass IndexViewModel:ViewModel() {    var user:MutableLiveData<DataUsersModel>    lateinit var dataUserDatasource: DataUsersSource    var hazardUser:MutableLiveData<Int>    var inspeksiUser:MutableLiveData<Int>    init {        user = MutableLiveData()        hazardUser = MutableLiveData()        inspeksiUser = MutableLiveData()    }    fun getUserObserver() :MutableLiveData<DataUsersModel>{        return user    }    fun hazardObserver():MutableLiveData<Int>{        return hazardUser    }    fun inspeksiObserver():MutableLiveData<Int>{        return inspeksiUser    }    fun loadUser(c:Context,nik:String){        dataUserDatasource = DataUsersSource(c)        GlobalScope.launch {            val deferred = async {                dataUserDatasource.getItem(nik)            }            val result = deferred.await()            if(result!=null){                user.postValue(result)            }else{                user.postValue(null)            }        }    }    fun CARuser(hazard:Int,inspeksi:Int){        hazardUser.postValue(hazard)        inspeksiUser.postValue(inspeksi)    }    companion object{        var NIK = "NIK"    }}