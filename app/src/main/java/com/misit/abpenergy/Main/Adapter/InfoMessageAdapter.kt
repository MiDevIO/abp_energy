package com.misit.abpenergy.Main.Adapterimport android.content.Contextimport android.util.TypedValueimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.Buttonimport android.widget.LinearLayoutimport android.widget.TextViewimport androidx.cardview.widget.CardViewimport androidx.recyclerview.widget.RecyclerViewimport com.misit.abpenergy.Main.Response.MessageInfoItemimport com.misit.abpenergy.Rimport org.joda.time.LocalDateimport org.joda.time.format.DateTimeFormatimport org.joda.time.format.DateTimeFormatterimport java.text.SimpleDateFormatimport java.util.*class InfoMessageAdapter(    private val context: Context?,    private val messageList:MutableList<MessageInfoItem>):    RecyclerView.Adapter<InfoMessageAdapter.MyViewHolder>(){    private val layoutInflater: LayoutInflater    private var simpleDateFormat: SimpleDateFormat? = null    private var onItemClickListener: OnItemClickListener? = null    override fun onCreateViewHolder(        parent: ViewGroup,        viewType: Int    ): MyViewHolder {        val view = layoutInflater.inflate(R.layout.message_info,parent,false)        return MyViewHolder(view)    }    override fun getItemCount(): Int {        return messageList.size    }    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {        val today = Date()        var listMessage =messageList[position]        val date = LocalDate.parse(listMessage.tgl)        val fmt: DateTimeFormatter = DateTimeFormat.forPattern("d MMMM, yyyy")        holder.tvJudul.text = listMessage.judul        if(listMessage.pesan!=null){            if (listMessage!!.pesan!!.length>20){                holder.tvPesan.text = "${listMessage.pesan?.substring(0,20)} . . ."            }else{                holder.tvPesan.text = listMessage.pesan            }        }        holder.tvTgl.text = date.toString(fmt)        if(listMessage.status==1){            holder.cvInfo.visibility = View.GONE        }else{            holder.cvInfo.visibility = View.VISIBLE        }        holder.cvInfo.setOnClickListener {            onItemClickListener?.onItemClick(listMessage.idInfo)        }    }    class MyViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {        var cvInfo = itemView.findViewById<View>(R.id.cvInfo) as CardView        var tvJudul = itemView.findViewById<View>(R.id.tvJudul) as TextView        var tvPesan= itemView.findViewById<View>(R.id.tvPesan) as TextView        var tvTgl= itemView.findViewById<View>(R.id.tvTgl) as TextView    }    interface OnItemClickListener{        fun onItemClick(idInfo:Int?)    }    fun setListener (listener:OnItemClickListener){        onItemClickListener = listener    }    init {        layoutInflater = LayoutInflater.from(context)        simpleDateFormat= SimpleDateFormat("yyyy-MM-dd")    }}