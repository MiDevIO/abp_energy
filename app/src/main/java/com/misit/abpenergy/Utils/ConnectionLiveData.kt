package com.misit.abpenergy.Utilsimport android.app.Applicationimport android.content.Contextimport android.net.ConnectivityManagerimport android.net.Networkimport android.net.NetworkRequestimport android.os.Buildimport androidx.annotation.RequiresApiimport androidx.lifecycle.LiveDataimport io.realm.annotations.Requiredclass ConnectionLiveData(private val connectivityManager: ConnectivityManager):LiveData<Boolean>() {    constructor(application: Application):this(        application.getSystemService(Context.CONNECTIVITY_SERVICE) as ConnectivityManager    )    private val networkCallback = @RequiresApi(Build.VERSION_CODES.LOLLIPOP)    object :ConnectivityManager.NetworkCallback(){        override fun onAvailable(network: Network) {            postValue(true)            super.onAvailable(network)        }        override fun onLost(network: Network) {            postValue(false)            super.onLost(network)        }    }    @RequiresApi(Build.VERSION_CODES.LOLLIPOP)    override fun onActive() {        val builder = NetworkRequest.Builder()        connectivityManager.registerNetworkCallback(builder.build(),networkCallback)        super.onActive()    }    @RequiresApi(Build.VERSION_CODES.LOLLIPOP)    override fun onInactive() {        connectivityManager.unregisterNetworkCallback(networkCallback)        super.onInactive()    }}