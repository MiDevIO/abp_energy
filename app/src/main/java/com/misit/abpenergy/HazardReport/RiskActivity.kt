package com.misit.abpenergy.HazardReportimport android.app.Activityimport android.content.Contextimport android.content.Intentimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.util.Logimport android.view.Windowimport android.view.WindowManagerimport androidx.core.content.ContextCompatimport androidx.recyclerview.widget.LinearLayoutManagerimport com.misit.abpenergy.Api.ApiClientimport com.misit.abpenergy.Api.ApiEndPointimport com.misit.abpenergy.DataSource.KeparahanDataSourceimport com.misit.abpenergy.DataSource.PengendalianDataSourceimport com.misit.abpenergy.HazardReport.Adapter.RiskAdapterimport com.misit.abpenergy.HazardReport.Response.KeparahanItemimport com.misit.abpenergy.HazardReport.Response.LokasiResponseimport com.misit.abpenergy.HazardReport.Response.RiskItemimport com.misit.abpenergy.HazardReport.Response.RiskResponseimport com.misit.abpenergy.Rimport es.dmoral.toasty.Toastyimport kotlinx.android.synthetic.main.activity_lokasi.*import kotlinx.android.synthetic.main.activity_risk.*import retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseimport java.sql.SQLExceptionclass RiskActivity : AppCompatActivity(),    RiskAdapter.OnItemClickListener {    private var adapter: RiskAdapter? = null    private var riskList:MutableList<RiskItem>?=null    private var riskDipilih:String?=null    private var call: Call<RiskResponse>?=null    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_risk)        title="Pilih Risk Kategori"        val window: Window = this.window        window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS)        window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS)        window.statusBarColor = ContextCompat.getColor(this, R.color.colorPrimary)        riskList = ArrayList()        riskDipilih = intent.getStringExtra("riskDipilih")        var actionBar = supportActionBar        actionBar?.setDisplayHomeAsUpEnabled(true)        adapter = RiskAdapter(            this,            riskDipilih,            riskList!!        )        val linearLayoutManager = LinearLayoutManager(this@RiskActivity)        rvRisk?.layoutManager = linearLayoutManager        rvRisk.adapter =adapter        adapter?.setListener(this)//        loadData()        PengendalianSQL(this@RiskActivity)    }    private fun loadData() {        val apiEndPoint = ApiClient.getClient(this@RiskActivity)!!.create(ApiEndPoint::class.java)        call = apiEndPoint.getRiskList()        call?.enqueue(object : Callback<RiskResponse?> {            override fun onFailure(call: Call<RiskResponse?>, t: Throwable) {                Toasty.error(this@RiskActivity,"Error : "+ t).show()            }            override fun onResponse(                call: Call<RiskResponse?>,                response: Response<RiskResponse?>            ) {                var riskRes= response.body()                if(riskRes!=null){                    Log.d("LOKASI_LOG",riskRes.toString())                    if(riskRes.risk!=null){                        riskList?.addAll(riskRes.risk!!)                        adapter?.notifyDataSetChanged()                    }                }            }        })    }    override fun onItemClick(idRisk: String?, risk: String?) {        val intent: Intent = Intent()        intent.putExtra("riskID",idRisk)        intent.putExtra("riskDipilih",risk)        setResult(Activity.RESULT_OK,intent)        finish()    }    override fun onNavigateUp(): Boolean {        onBackPressed()        return super.onNavigateUp()    }    private fun PengendalianSQL(c: Context){        val pengendalianDataSource =            PengendalianDataSource(c)        try {            val pengendalianRow=pengendalianDataSource.getAll()            pengendalianRow.forEach{                Log.d("KemungkinanSQL",pengendalianRow.toString())                riskList?.add(RiskItem(it.tglInput,it.descRisk,it.bgColor,it.userInput,it.txtColor,it.risk,it.idRisk))                adapter?.notifyDataSetChanged()            }        }catch (e: SQLException){            Log.d("KemungkinanSQL",e.toString())        }    }}