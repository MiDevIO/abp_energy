package com.misit.abpenergy.Loginimport android.content.pm.PackageInfoimport android.content.pm.PackageManagerimport android.graphics.Colorimport android.graphics.drawable.ColorDrawableimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.widget.Buttonimport android.widget.LinearLayoutimport android.widget.TextViewimport androidx.appcompat.app.AlertDialogimport com.misit.abpenergy.Api.ApiClientimport com.misit.abpenergy.Api.ApiEndPointTwoimport com.misit.abpenergy.Login.Response.Userimport com.misit.abpenergy.Rimport com.misit.abpenergy.Utils.ConfigUtilimport com.misit.abpenergy.Utils.ConfigUtil.resultIntentimport es.dmoral.toasty.Toastyimport kotlinx.android.synthetic.main.activity_forgot_password.*import kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.GlobalScopeimport kotlinx.coroutines.asyncimport kotlinx.coroutines.launchimport retrofit2.HttpExceptionclass ForgotPasswordActivity : AppCompatActivity(),View.OnClickListener {    private  var dialog:AlertDialog?=null    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_forgot_password)        ConfigUtil.changeColor(this)        var username = intent.getStringExtra(USERNAME)        if(username!=null){            Toasty.info(this,username).show()        }        btnHaveAccount.setOnClickListener(this@ForgotPasswordActivity)        btnNewUser.setOnClickListener(this@ForgotPasswordActivity)        btnCheck.setOnClickListener(this@ForgotPasswordActivity)    }    companion object{      var USERNAME = null    }    override fun onClick(v: View?) {        if(v?.id==R.id.btnHaveAccount){            finish()        }        if(v?.id==R.id.btnNewUser){            resultIntent(this@ForgotPasswordActivity)        }        if(v?.id==R.id.btnCheck){            var login = InUsername.text.toString()            if(login==null){                InUsername.requestFocus()                tilUsername.error="Tidak Boleh Kosong!"            }else{                searchAccount(login)            }        }    }    private fun searchAccount(login:String?){        var users = User()        GlobalScope.launch(Dispatchers.Main) {            var apiEndPointTwo = ApiClient.getClient(this@ForgotPasswordActivity)!!.create(ApiEndPointTwo::class.java)            var def = async {                try {                    var apiResult = apiEndPointTwo.cekAkun(login)                    if(apiResult!!.isSuccessful){                        var result = apiResult.body()?.user                        if(result!=null){                            users=result                            true                        }else{                            false                        }                    }else{                        false                    }                }catch (e:HttpException){                    Log.d("ErrorLog","${e.message()}")                    false                }            }            if(def.await()){                cancelDialog(users)            }else{                Toasty.error(this@ForgotPasswordActivity,"Akun Tidak Ditemukan!").show()            }        }    }    private fun cancelDialog(usr: User?){        var  mDialogView = LayoutInflater.from(this@ForgotPasswordActivity).inflate(R.layout.cek_akun,null)        val lnUser = mDialogView?.findViewById<View>(R.id.lnUser) as LinearLayout        val lnNama = mDialogView?.findViewById<View>(R.id.lnNama) as LinearLayout        val lnNik = mDialogView?.findViewById<View>(R.id.lnNik) as LinearLayout        val tvUser = mDialogView?.findViewById<View>(R.id.tvUserCek) as TextView        val tvNama = mDialogView?.findViewById<View>(R.id.tvNamaCek) as TextView        val tvNik = mDialogView?.findViewById<View>(R.id.tvNikCek) as TextView        val tvPerusahaan = mDialogView?.findViewById<View>(R.id.tvPerusahaanCek) as TextView        val btnSimpan = mDialogView?.findViewById<View>(R.id.btnSimpan) as Button        val btnCancel = mDialogView?.findViewById<View>(R.id.btnCancel) as Button        tvUser.text = usr?.username        tvNama.text = usr?.namaLengkap        tvNik.text = usr?.nik        tvPerusahaan.text = usr?.nama_perusahaan        val mBuilder = AlertDialog.Builder(this@ForgotPasswordActivity)        mBuilder.setView(mDialogView)        dialog =mBuilder.show()        dialog?.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))        btnCancel.setOnClickListener {            dialog?.dismiss()        }        btnSimpan.setOnClickListener{        }    }    override fun onSupportNavigateUp(): Boolean {        onBackPressed()        return super.onSupportNavigateUp()    }    override fun onResume() {        versionApp()        super.onResume()    }    fun versionApp(){        try {            val pInfo: PackageInfo = this.getPackageManager().getPackageInfo(packageName, 0)            tvVersionCode.text = pInfo.versionName        } catch (e: PackageManager.NameNotFoundException) {            Log.d("AppVersion","${e.message}")        }    }}