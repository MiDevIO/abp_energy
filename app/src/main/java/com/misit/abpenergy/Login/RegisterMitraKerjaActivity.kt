package com.misit.abpenergy.Loginimport android.app.Activityimport android.content.Intentimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.util.Logimport android.view.Viewimport android.widget.Toastimport com.misit.abpenergy.Api.ApiClientimport com.misit.abpenergy.Api.ApiEndPointimport com.misit.abpenergy.Api.ApiEndPointTwoimport com.misit.abpenergy.Login.Response.DaftarAkunResponseimport com.misit.abpenergy.Rimport com.misit.abpenergy.Rkb.Response.CsrfTokenResponseimport com.misit.abpenergy.Utils.PopupUtilimport es.dmoral.toasty.Toastyimport kotlinx.android.synthetic.main.activity_register_mitra_kerja.*import retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseclass RegisterMitraKerjaActivity : AppCompatActivity(),View.OnClickListener {    private var companyDipilih:String?=null    private var deptDipilih:String?=null    private var sectDipilih:String?=null    private var idCompany:String?=null    private var idDept:String?=null    private var idSect:String?=null    var csrf_token:String?=null    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_register_mitra_kerja)        companyDipilih=""        deptDipilih=""        sectDipilih=""        idCompany=""        idDept=""        idSect=""        btnHaveAccount.setOnClickListener(this)        btnDaftar.setOnClickListener(this)        InPerusahaan.setOnClickListener(this)        InDept.setOnClickListener(this)        InSection.setOnClickListener(this)    }    override fun onResume() {        getToken()        super.onResume()    }    override fun onSupportNavigateUp(): Boolean {        onBackPressed()        return super.onSupportNavigateUp()    }    override fun onClick(v: View?) {        if(v?.id==R.id.btnHaveAccount){            finish()        }        if(v?.id==R.id.btnDaftar){            daftarAkunMitra()        }        if(v?.id==R.id.InPerusahaan){            val intent = Intent(this@RegisterMitraKerjaActivity,CompanyActivity::class.java)            intent.putExtra("companyDipilih",companyDipilih)            startActivityForResult(intent,1)        }        if(v?.id==R.id.InDept){            val intent = Intent(this@RegisterMitraKerjaActivity,DepartmentActivity::class.java)            intent.putExtra("idCompany",idCompany)            intent.putExtra("deptDipilih",deptDipilih)            startActivityForResult(intent,2)        }        if(v?.id==R.id.InSection){            val intent = Intent(this@RegisterMitraKerjaActivity,SectionActivity::class.java)            intent.putExtra(SectionActivity.ID_DEPARTEMEN,idDept)            intent.putExtra("DEVISI",sectDipilih)            startActivityForResult(intent,3)        }    }    private fun daftarAkunMitra() {        if(!isValidate()){            return        }        var nik =InNik.text.toString()        var username = InUsername.text.toString()        var password = InPassword.text.toString()        var fullname = InFullName.text.toString()        var email = InEmail.text.toString()        var company = idCompany        var departemen = idDept        var devisi = idSect        PopupUtil.showProgress(this@RegisterMitraKerjaActivity,"Loading...","Mendaftarkan Pengguna Baru!")        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPointTwo::class.java)        val call = apiEndPoint.daftarkanAkunMitra(            nik,            username,            password,            fullname,            email,            company,            departemen,            devisi,            csrf_token!!        )        call?.enqueue(object : Callback<DaftarAkunResponse> {            override fun onResponse(                call: Call<DaftarAkunResponse>,                response: Response<DaftarAkunResponse>            ) {                var r = response.body()                if(r!=null){                    if(r.success!! && r.login) {                        Toasty.success(this@RegisterMitraKerjaActivity, "Berhasil Mendaftar Akun!").show()                        val intent = Intent()                        intent.putExtra("RegUser", username)                        setResult(Activity.RESULT_OK, intent)                        finish()                    }else if(r.success && r.login==false){                    }else{                        Toasty.error(this@RegisterMitraKerjaActivity,"Username Sudah Terpakai").show()                        InUsername.requestFocus()                        tilUsername.error = "Username tidak tersedia!"                    }                }else{                    Toasty.error(this@RegisterMitraKerjaActivity,"Gagal Mendaftar Akun! Coba Lagi1").show()                    clearError()                    InNik.requestFocus()                }                PopupUtil.dismissDialog()            }            override fun onFailure(call: Call<DaftarAkunResponse>, t: Throwable) {                Log.v("DaftarAkun",t.printStackTrace().toString())                PopupUtil.dismissDialog()            }        })    }    private fun getToken() {        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)        val call = apiEndPoint.getToken("csrf_token")        call?.enqueue(object : Callback<CsrfTokenResponse> {            override fun onFailure(call: Call<CsrfTokenResponse>, t: Throwable) {                Toast.makeText(this@RegisterMitraKerjaActivity,"Error : $t", Toast.LENGTH_SHORT).show()            }            override fun onResponse(                call: Call<CsrfTokenResponse>,                response: Response<CsrfTokenResponse>            ) {                csrf_token = response.body()?.csrfToken            }        })    }    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {        if(resultCode==Activity.RESULT_OK && requestCode==1){            if(data!=null){                companyDipilih = data.getStringExtra("companyDipilih")                idCompany = data.getStringExtra("idCompany")                if(idCompany!=null){                    InDept.isEnabled=true                }else{                    InDept.isEnabled=false                }                InPerusahaan.setText(companyDipilih!!)            }        }        if(resultCode==Activity.RESULT_OK && requestCode==2){            if(data!=null){                deptDipilih = data.getStringExtra("deptDipilih")                idDept = data.getStringExtra("idDept")                if(idDept!=null){                    InSection.isEnabled=true                }else{                    InSection.isEnabled=false                }                InDept.setText(deptDipilih!!)            }        }        if(resultCode==Activity.RESULT_OK && requestCode==3){            if(data!=null){                sectDipilih = data.getStringExtra("DEVISI")                idSect = data.getStringExtra("ID_DEVISI")                if(idSect!=null){                    btnDaftar.isEnabled=true                }else{                    btnDaftar.isEnabled=false                }                InSection.setText(sectDipilih!!)            }        }        super.onActivityResult(requestCode, resultCode, data)    }    private fun isValidate():Boolean{        clearError()        if(InUsername.text!!.isEmpty()){            tilUsername.error="Please Input Someting"            InUsername.requestFocus()            return false        }        if(InPassword.text!!.isEmpty()){            tilPassword.error="Please Input Someting"            InPassword.requestFocus()            return false        }        if(InFullName.text!!.isEmpty()){            tilUsername.error="Please Input Someting"            tilFullName.requestFocus()            return false        }        if(InEmail.text!!.isEmpty()){            tilEmail.error="Please Input Someting"            InEmail.requestFocus()            return false        }        if(InPerusahaan.text!!.isEmpty()){            tilPerusahaan.error="Please Input Someting"            InPerusahaan.requestFocus()            return false        }        if(InDept.text!!.isEmpty()){            tilDept.error="Please Input Someting"            InDept.requestFocus()            return false        }        if(InSection.text!!.isEmpty()){            tilSection.error="Please Input Someting"            InSection.requestFocus()            scrlDaftar.fullScroll(View.FOCUS_DOWN);            return false        }        return true    }    private fun clearError() {        tilNik.error=null        tilUsername.error=null        tilFullName.error=null        tilPassword.error=null        tilPerusahaan.error=null        tilEmail.error=null        tilDept.error=null        tilSection.error=null    }}