package com.misit.abpenergy.Loginimport android.R.attrimport android.app.Activityimport android.content.Intentimport android.graphics.Bitmapimport android.graphics.BitmapFactoryimport android.net.Uriimport android.os.Bundleimport android.util.Logimport android.view.Viewimport androidx.appcompat.app.AppCompatActivityimport com.misit.abpenergy.Rimport com.theartofdev.edmodo.cropper.CropImageimport com.theartofdev.edmodo.cropper.CropImageViewimport kotlinx.android.synthetic.main.activity_foto_profile.*import java.io.IOExceptionclass FotoProfileActivity : AppCompatActivity(),View.OnClickListener {    private var bitmap:Bitmap?=null    private var img:Int?=null    private var fileUpload:Uri?=null    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_foto_profile)        btnAmbilFoto.setOnClickListener(this)    }    override fun onClick(v: View?) {        if(v?.id==R.id.btnAmbilFoto){            bitmap=null            img=0//            ConfigUtil.showDialogOption(this@FotoProfileActivity, 101,102)            CropImage                .activity()                .setGuidelines(CropImageView.Guidelines.ON)                .setFixAspectRatio(true)                .setAspectRatio(480,480)                .start(this@FotoProfileActivity)        }    }    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {        if(resultCode== Activity.RESULT_OK && requestCode==102) {            //            GALERY            try {                fileUpload = data!!.data                try {                    bitmap = BitmapFactory.decodeStream(                        contentResolver.openInputStream(fileUpload!!)                    )                    imgProf.setImageBitmap(bitmap);                    img = 1                } catch (e: IOException) {                    img = 0                }            } catch (e: IOException) {                img = 0            }        }else if(resultCode== Activity.RESULT_OK && requestCode==101) {            try {                var dataFoto = data!!                bitmap = BitmapFactory.decodeByteArray(                    dataFoto.getByteArrayExtra("gambarDiFoto"), 0, dataFoto                        .getByteArrayExtra("gambarDiFoto").size                )                imgProf.setImageBitmap(bitmap);                img = 1            } catch (e: IOException) {                img = 0                e.printStackTrace();            }        }        if (requestCode === CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {            val result = CropImage.getActivityResult(data)            if (resultCode === RESULT_OK) {                val resultUri = result.uri                imgProf.setImageURI(resultUri)//                try {//                    bitmap = BitmapFactory.decodeStream(//                        contentResolver.openInputStream(resultUri!!)//                    )//                    imgProf.setImageBitmap(bitmap);//                    img = 1//                } catch (e: IOException) {//                    Log.d("LOG_CROP_IMAGE",e.toString())//                    img = 0//                }            } else if (resultCode == CropImage.CROP_IMAGE_ACTIVITY_RESULT_ERROR_CODE) {                Log.d("ErrorLog",result.getError().toString())            }        }        Log.d("requestCode",resultCode.toString())        super.onActivityResult(requestCode, resultCode, data)    }}