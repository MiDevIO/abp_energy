package com.misit.abpenergy.Loginimport android.app.Activityimport android.content.Contextimport android.content.Intentimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.view.Viewimport com.misit.abpenergy.Api.ApiClientimport com.misit.abpenergy.Api.ApiEndPointimport com.misit.abpenergy.Login.Response.DataUserResponseimport com.misit.abpenergy.Rimport com.misit.abpenergy.Rkb.Response.UserResponseimport com.misit.abpenergy.Utils.ConfigUtilimport com.misit.abpenergy.Utils.PopupUtilimport es.dmoral.toasty.Toastyimport kotlinx.android.synthetic.main.activity_register.*import retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseclass RegisterActivity : AppCompatActivity(),View.OnClickListener {    private var dataUser: MutableList<DataUserResponse>?=null    private var idDept:String?=null    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_register)        ConfigUtil.changeColor(this)        dataUser=ArrayList()        btnHaveAccount.setOnClickListener(this)        btnCekData.setOnClickListener(this)        InSection.setOnClickListener(this)    }    override fun onResume() {        super.onResume()        btnDaftar.visibility=View.GONE        btnCekData.visibility=View.VISIBLE    }    override fun onClick(v: View?) {        if(v?.id==R.id.btnHaveAccount){            finish()        }        if(v?.id==R.id.btnCekData){            if(!InNik.text!!.isEmpty()){                var nik = InNik.text.toString()                cekUser(nik,this@RegisterActivity)            }else{                tilNik.error = "Tidak Boleh Kosong!"                InNik.requestFocus()                return            }        }        if (v?.id==R.id.InSection){            val intent = Intent(this@RegisterActivity,SectionActivity::class.java)            intent.putExtra(SectionActivity.ID_DEPARTEMEN,idDept)            startActivityForResult(intent,13)        }    }    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {        if(resultCode==Activity.RESULT_OK && requestCode==13){        }        super.onActivityResult(requestCode, resultCode, data)    }    private fun cekUser(nik:String,c:Context){        PopupUtil.showLoading(this@RegisterActivity,"Mencari Data","Mohon Menunggu!!")        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)        val call = apiEndPoint.getDataForNewUser(nik)        call?.enqueue(object : Callback<DataUserResponse> {            override fun onResponse(call: Call<DataUserResponse>, response: Response<DataUserResponse>) {                var r = response.body()                if(r!=null){                    if(r.dataUser!=null){                        InUsername.isEnabled=true                        InPassword.isEnabled=true                        InFullName.isEnabled=true                        InEmail.isEnabled=true                        InDept.isEnabled=true                        InSection.isEnabled=true                        InFullName.setText(r!!.dataUser!!.nama)                        InDept.setText(r!!.dataUser!!.dept)                        InSection.setText(r!!.dataUser!!.devisi)                        idDept=r!!.dataUser!!.idDept                        InUsername.requestFocus()                        btnDaftar.visibility=View.VISIBLE                        btnCekData.visibility=View.GONE                    }                    PopupUtil.dismissDialog()                }            }            override fun onFailure(call: Call<DataUserResponse>, t: Throwable) {                Toasty.error(c,t.printStackTrace().toString()).show()                PopupUtil.dismissDialog()            }        })    }}