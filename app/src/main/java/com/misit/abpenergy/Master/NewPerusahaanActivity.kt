package com.misit.abpenergy.Masterimport android.content.Contextimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.widget.Toastimport com.misit.abpenergy.Api.ApiClientimport com.misit.abpenergy.Api.ApiEndPointimport com.misit.abpenergy.Api.ApiEndPointTwoimport com.misit.abpenergy.Rimport com.misit.abpenergy.Rkb.Response.CsrfTokenResponseimport kotlinx.android.synthetic.main.activity_new_perusahaan.*import retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseclass NewPerusahaanActivity : AppCompatActivity() {    private var csrf_token : String?=""    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_new_perusahaan)        title ="Form Perusahaan"        val perusahaan = inPerusahaan.text.toString()        btnSimpan.setOnClickListener {            simpanperusahaan(this@NewPerusahaanActivity,perusahaan)        }    }    private fun simpanperusahaan(c: Context, perusahaan:String) {        if(!isValidatedAll()){            return        }        val apiEndPoint = ApiClient.getClient(c)!!.create(ApiEndPointTwo::class.java)        val call = apiEndPoint.saveCompany(perusahaan,csrf_token)    }    private fun isValidatedAll()  :Boolean {        clearError()        if(inPerusahaan.text!!.isEmpty()){            tilPerusahaan.error = "Tidak Boleh Kosong"            inPerusahaan.requestFocus()            return false        }        return true    }    private fun clearError() {        tilPerusahaan.error = null    }    override fun onResume() {        getToken()        super.onResume()    }    private fun getToken() {        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)        val call = apiEndPoint.getToken("csrf_token")        call?.enqueue(object : Callback<CsrfTokenResponse> {            override fun onFailure(call: Call<CsrfTokenResponse>, t: Throwable) {                Toast.makeText(this@NewPerusahaanActivity,"Error : $t", Toast.LENGTH_SHORT).show()            }            override fun onResponse(                call: Call<CsrfTokenResponse>,                response: Response<CsrfTokenResponse>            ) {                csrf_token = response.body()?.csrfToken            }        })    }}