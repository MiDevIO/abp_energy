package com.misit.abpenergy.Masterimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.util.Logimport android.view.Windowimport android.view.WindowManagerimport androidx.core.content.ContextCompatimport androidx.recyclerview.widget.LinearLayoutManagerimport com.misit.abpenergy.Api.ApiClientimport com.misit.abpenergy.Api.ApiEndPointTwoimport com.misit.abpenergy.Master.Adapter.ListUserAdapterimport com.misit.abpenergy.Master.Response.ListUsersResponseimport com.misit.abpenergy.Master.Response.UserItemimport com.misit.abpenergy.Rimport es.dmoral.toasty.Toastyimport kotlinx.android.synthetic.main.activity_list_user.*import retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseclass ListUserActivity : AppCompatActivity(),ListUserAdapter.OnItemClickListener {    private var adapter: ListUserAdapter? = null    private var userList:MutableList<UserItem>?=null    private var userPick:String?=null    private var page:Int=0    private var call: Call<ListUsersResponse>?=null    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_list_user)        title="List User"        val window: Window = this.window        window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS)        window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS)        window.statusBarColor = ContextCompat.getColor(this, R.color.colorPrimary)        userList = ArrayList()        userPick = intent.getStringExtra("userPick")        var actionBar = supportActionBar        actionBar?.setDisplayHomeAsUpEnabled(true)        adapter = ListUserAdapter(            this,            userPick,            userList!!        )        val linearLayoutManager = LinearLayoutManager(this@ListUserActivity)        rvListUser?.layoutManager = linearLayoutManager        rvListUser.adapter =adapter        adapter?.setListener(this)        loadData(page)    }    private fun loadData(hal:Int) {        val apiEndPoint = ApiClient.getClient(this@ListUserActivity)!!.create(ApiEndPointTwo::class.java)        call = apiEndPoint.getUsersList(hal)        call?.enqueue(object : Callback<ListUsersResponse?> {            override fun onFailure(call: Call<ListUsersResponse?>, t: Throwable) {                Toasty.error(this@ListUserActivity,"Error : "+ t).show()            }            override fun onResponse(                call: Call<ListUsersResponse?>,                response: Response<ListUsersResponse?>            ) {                var r= response.body()                if(r!=null){                    Log.d("response",r.toString())                    if(r!=null){                        if(r.listUser!=null){                            userList?.addAll(r.listUser?.data!!)                        }                        adapter?.notifyDataSetChanged()                    }                }            }        })    }    override fun onItemClick(id_user: Int, username: String, nik: String, profileIMG: String) {    }}