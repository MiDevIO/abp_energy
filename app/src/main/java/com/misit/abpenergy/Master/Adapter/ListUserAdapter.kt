package com.misit.abpenergy.Master.Adapterimport android.content.Contextimport android.content.ContextWrapperimport android.graphics.Colorimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.ImageViewimport android.widget.TextViewimport androidx.cardview.widget.CardViewimport androidx.recyclerview.widget.RecyclerViewimport com.bumptech.glide.Glideimport com.misit.abpenergy.Master.Response.UsersListItemimport com.misit.abpenergy.Rimport com.misit.abpenergy.Utils.ConfigUtilimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.GlobalScopeimport kotlinx.coroutines.asyncimport kotlinx.coroutines.launchimport java.io.Fileimport java.lang.Exceptionimport java.text.SimpleDateFormatimport java.util.function.LongFunctionimport kotlin.math.logclass ListUserAdapter(private val c: Context?,                      private var userPick: String?,                      private val userList:MutableList<UsersListItem>):    RecyclerView.Adapter<ListUserAdapter.MyViewHolder>() {    private var onItemClickListener: OnItemClickListener? = null    private val layoutInflater: LayoutInflater    private var simpleDateFormat: SimpleDateFormat? = null    lateinit var view: View    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {        view = layoutInflater.inflate(R.layout.list_user,parent,false)        return MyViewHolder(view)    }    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {        GlobalScope.launch(Dispatchers.Main) {        var listUser =userList[position]        holder.userNAMA.text = listUser.namaLengkap        holder.userNIK.text = listUser.nik.toString()        holder.userNIK.text = listUser.nik.toString()        if(userPick==listUser.idUser.toString()){            holder.cvUserItem.setCardBackgroundColor(Color.parseColor("#4F8E50"))        }else{            holder.cvUserItem.setBackgroundColor(Color.parseColor("#FFFFFF"))        }        if(listUser.dept=="ALL"){            holder.userDEPARTEMEN.text = "Kepala Teknik Tambang"        }else{            holder.userDEPARTEMEN.text = listUser.dept        }        holder.userPERUSAHAAN.text = listUser.namaPerusahaan//        val img = holder.imgProf            if(ConfigUtil.cekKoneksi(c!!)) {                if (listUser.photoProfile != null) {                    if("${listUser.nik}.jpg"==listUser.photoProfile){                        async {//                            val bitmap =  ConfigUtil.fileToBitmap(c!!, "PROFILE_IMAGE", listUser.photoProfile!!)//                            Log.d("bitmapImage", bitmap.toString())                    val dir = c!!.getExternalFilesDir("PROFILE_IMAGE")                    val file = File(dir,listUser.photoProfile)//                    Log.d("FileName","file:///${file.path}")                            Glide.with(c!!).load(file.absolutePath).into(holder.imgProf)                        }.await()                    }else{                        async {                            Glide.with(c!!).load(listUser.photoProfile!!).into(holder.imgProf)                        }.await()                    }                } else {                    holder.imgProf.setImageResource(R.drawable.ic_baseline_person_24)                }            }else{                if (listUser.photoProfile != null) {                    async {                        val bitmap =                            ConfigUtil.fileToBitmap(c!!, "PROFILE_IMAGE", listUser.photoProfile!!)                        Log.d("bitmapImage", bitmap.toString())//                    val dir = c!!.getExternalFilesDir("PROFILE_IMAGE")//                    val file = File(dir,listUser.photoProfile)//                    Log.d("FileName","file:///${file.path}")                        Glide.with(c!!).load(bitmap).into(holder.imgProf)                    }.await()                } else {                    holder.imgProf.setImageResource(R.drawable.ic_baseline_person_24)                }            }        holder.cvUserItem.setOnClickListener {            onItemClickListener?.onItemClick(listUser.idUser!!,listUser.namaLengkap!!,listUser.nik!!.toString(),listUser.photoProfile)        }        }    }    override fun getItemCount(): Int {        return userList.size    }    class MyViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {        var cvUserItem = itemView.findViewById<View>(R.id.cvUserItem) as CardView        var imgProf = itemView.findViewById<View>(R.id.imgProf) as ImageView        var userNAMA = itemView.findViewById<View>(R.id.userNAMA) as TextView        var userNIK = itemView.findViewById<View>(R.id.userNIK) as TextView        var userDEPARTEMEN = itemView.findViewById<View>(R.id.userDEPARTEMEN) as TextView        var userPERUSAHAAN = itemView.findViewById<View>(R.id.userPERUSAHAAN) as TextView    }    interface OnItemClickListener{        fun onItemClick(id_user:Int,username:String,nik:String,profileIMG:String?)    }    fun setListener (listener: OnItemClickListener){        onItemClickListener = listener    }    init {        layoutInflater = LayoutInflater.from(c)        simpleDateFormat= SimpleDateFormat("yyyy-MM-dd")    }}