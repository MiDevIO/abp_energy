package com.misit.abpenergy.HSE.Buletin.ViewModelsimport android.content.Contextimport android.util.Logimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport com.misit.abpenergy.Api.ApiClientTwoimport com.misit.abpenergy.Api.ApiEndPointTwoimport com.misit.abpenergy.Main.Response.MessageInfoItemimport kotlinx.coroutines.*class BuletinViewModel():ViewModel() {    private var listInfo:MutableLiveData<MutableList<MessageInfoItem>>    init {        listInfo = MutableLiveData()    }    fun loadInfo():MutableLiveData<MutableList<MessageInfoItem>>{        return listInfo    }    fun loadMessageInfo(c: Context){        var listItem:ArrayList<MessageInfoItem> = ArrayList()        GlobalScope.launch(Dispatchers.IO) {            var api = async { ApiClientTwo.getClient(c)!!.create(ApiEndPointTwo::class.java) }.await()            try {                var r = async { api.getMessageInfo() }.await()                if(r!!.isSuccessful){                    var pesan =  async {r.body() }.await()                    var a = listOf(                        async { listItem.addAll(pesan!!.messageInfo!!) },                        async { listInfo.postValue(listItem) }                    )                    a.awaitAll()                }else{                }            }catch (e:Exception){                Log.d("ErrorMessage","${e.message}")            }        }    }}