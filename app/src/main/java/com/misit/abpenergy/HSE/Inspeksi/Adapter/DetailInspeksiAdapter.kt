package com.misit.abpenergy.HSE.Inspeksi.Adapterimport android.content.Contextimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.LinearLayoutimport android.widget.TextViewimport androidx.recyclerview.widget.LinearLayoutManagerimport androidx.recyclerview.widget.RecyclerViewimport com.misit.abpenergy.HSE.Inspeksi.Response.ItemsInspeksiModelsimport com.misit.abpenergy.HSE.Inspeksi.Response.SubItemsModelsimport com.misit.abpenergy.HSE.Inspeksi.SQLite.ItemDataSourceimport com.misit.abpenergy.Rimport com.misit.abpenergy.Utils.PrefsUtilimport java.text.SimpleDateFormatclass DetailInspeksiAdapter(private var c: Context,                            private var idForm:String,                            private var idInspeksi:String,                            private val subItemList:MutableList<SubItemsModels>):    RecyclerView.Adapter<DetailInspeksiAdapter.MyViewHolder>() {    private val layoutInflater: LayoutInflater    private var simpleDateFormat: SimpleDateFormat? = null    lateinit var view: View    //    API    private var itemAdapter: ItemsDetailAdapter? = null    private var itemList:MutableList<ItemsInspeksiModels>?=null    //    SQLite    private val itemDataSource = ItemDataSource(c!!)    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {        itemList = ArrayList()        PrefsUtil.initInstance(c)        view = layoutInflater.inflate(R.layout.sub_inspeksi_custom,parent,false)        return MyViewHolder(view)    }    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {        var listSub = subItemList[position]        holder.tvSub.text =listSub.nameSub        holder.tvNumb.text = listSub.numSub        if(listSub.nameSub==null){            holder.tvSub.visibility = View.GONE            holder.lnSub.visibility = View.GONE        }else{            holder.tvSub.visibility = View.VISIBLE            holder.lnSub.visibility = View.VISIBLE        }        itemList = listSub.items        itemAdapter = ItemsDetailAdapter(c!!,idForm!!,idInspeksi!!,itemList!!)        holder.rvItemInspeksi.layoutManager = LinearLayoutManager(c,            LinearLayoutManager.VERTICAL,false)        holder.rvItemInspeksi.adapter = itemAdapter        holder.rvItemInspeksi.isNestedScrollingEnabled =false//        itemAdapter?.notifyDataSetChanged()    }    override fun getItemCount(): Int {        return subItemList.size    }    class MyViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {        var tvSub = itemView.findViewById<View>(R.id.tvSub) as TextView        var rvItemInspeksi = itemView.findViewById<View>(R.id.rvItemInspeksi) as RecyclerView        var lnSub = itemView.findViewById<View>(R.id.lnSub) as LinearLayout        var tvNumb = itemView.findViewById<View>(R.id.tvNumb) as TextView    }    companion object{        var USERNAME = "USERNAME"    }    init {        layoutInflater = LayoutInflater.from(c)        simpleDateFormat= SimpleDateFormat("yyyy-MM-dd")    }}