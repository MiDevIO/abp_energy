package com.misit.abpenergyimport android.os.Bundleimport android.util.DisplayMetricsimport android.util.Logimport androidx.appcompat.app.AppCompatActivityimport com.bumptech.glide.Glideimport com.bumptech.glide.load.engine.DiskCacheStrategyimport com.google.zxing.BarcodeFormatimport com.google.zxing.MultiFormatWriterimport com.google.zxing.common.BitMatriximport com.journeyapps.barcodescanner.BarcodeEncoderimport kotlinx.android.synthetic.main.activity_image_hazard.*import kotlinx.android.synthetic.main.activity_q_r_code.*class QRCodeActivity : AppCompatActivity() {    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_q_r_code)        var actionBar = supportActionBar        actionBar?.setDisplayHomeAsUpEnabled(true)        var itemCodes = intent.getStringExtra("itemCodes")        var judul = intent.getStringExtra("judul")        title = judul        var multiFormatWriter = MultiFormatWriter()        val displayMetrics = DisplayMetrics()        windowManager.defaultDisplay.getMetrics(displayMetrics)        val width = displayMetrics.widthPixels        try {            var bitMatrix:BitMatrix = multiFormatWriter.encode(                itemCodes,                BarcodeFormat.QR_CODE,                width,                width            )            var barcodeEncoder = BarcodeEncoder()            var bitmap = barcodeEncoder.createBitmap(bitMatrix)            imgQRCode.setImageBitmap(bitmap)        }catch (e: Exception){            Log.d("Error",e.printStackTrace().toString())        }    }    override fun onSupportNavigateUp(): Boolean {        onBackPressed()        return super.onSupportNavigateUp()    }}