package com.misit.abpenergy.SQLiteimport android.content.Contextimport android.database.sqlite.SQLiteDatabaseimport android.database.sqlite.SQLiteOpenHelperclass DbHelper(c:Context):SQLiteOpenHelper(c,DB_NAME,null,59) {    companion object{        val DB_NAME = "abp.db"        val tb = arrayOf("INSPEKSI_ITEM_COUNTER","PENUMPANG","KEMUNGKINAN","KEPARAHAN",                            "PERUSAHAAN","LOKASI","PENGENDALIAN","USERS",                            "HAZARD_HEADER","HAZARD_DETAIL","HAZARD_VALIDATION",                            "HAZARD_HEADER_OFFLINE","HAZARD_DETAIL_OFFLINE","HAZARD_VALIDATION_OFFLINE",                            "RISK","DATAUSER","HAZARD_USER","metrik_resiko",                            "SCHEDULER","INSPEKSI","KET_PENGENDALIAN","DET_KEPARAHAN","SARANA",                            "HAZARD_VALIDATION_LOCAL","HAZARD_DETAIL_LOCAL","HAZARD_HEADER_LOCAL"                        )        val tbInspeksi = arrayListOf("form_inspeksi","form_inspeksi_list","form_inspeksi_sub")    }    override fun onCreate(db: SQLiteDatabase?) {        dbQuery.tbpenumpang(db)        dbQuery.tbUsers(db)        dbQuery.tbPerusahaan(db)        dbQuery.tbItemInspeksi(db)        dbQuery.tbPengendalian(db)        dbQuery.tbKkeparahan(db)        dbQuery.tbKemungkinan(db)        dbQuery.tbLokasi(db)        dbQuery.tbHazardHeader(db)        dbQuery.tbHazardDetail(db)        dbQuery.tbHazardValidation(db)        dbQuery.tbRISK(db)        dbQuery.tbDataUser(db)        dbQuery.tbHazardHeaderOffline(db)        dbQuery.tbHazardDetailOffline(db)        dbQuery.tbHazardValidationOffline(db)        dbQuery.tbHazardUser(db)        dbQuery.tbMetrikResiko(db)        dbQuery.tbScheduler(db)        dbQuery.tbKetHirarki(db)        dbQuery.tbDetKeparahan(db)        dbQuery.tbSarana(db)        dbQuery.tbHazardHeaderLocal(db)        dbQuery.tbHazardDetailLocal(db)        dbQuery.tbHazardValidationLocal(db)        //INSPEKSI        dbQueryInspeksi.tbForm(db)        dbQueryInspeksi.tbList(db)        dbQueryInspeksi.tbSub(db)    }    override fun onUpgrade(db: SQLiteDatabase?, oldVersion: Int, newVersion: Int) {        tb.forEach {            db?.execSQL("DELETE FROM SQLITE_SEQUENCE WHERE NAME = '" + it + "'")        }        tb.forEach {            db?.execSQL("DROP TABLE IF EXISTS ${it}")        }        tbInspeksi.forEach {            db?.execSQL("DELETE FROM SQLITE_SEQUENCE WHERE NAME = '" + it + "'")        }        tbInspeksi.forEach {            db?.execSQL("DROP TABLE IF EXISTS ${it}")        }        onCreate(db)    }}