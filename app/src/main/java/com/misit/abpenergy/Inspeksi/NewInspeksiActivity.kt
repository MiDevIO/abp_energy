package com.misit.abpenergy.Inspeksiimport android.content.Intentimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.util.Logimport androidx.recyclerview.widget.LinearLayoutManagerimport androidx.recyclerview.widget.RecyclerViewimport androidx.swiperefreshlayout.widget.SwipeRefreshLayoutimport com.misit.abpenergy.Api.ApiClientimport com.misit.abpenergy.Api.ApiEndPointimport com.misit.abpenergy.Inspeksi.Adapter.ListInspeksiAdapterimport com.misit.abpenergy.Inspeksi.Response.InspeksiGroupsResponseimport com.misit.abpenergy.Inspeksi.Response.ItemsInspeksiModelsimport com.misit.abpenergy.Inspeksi.Response.SubItemsModelsimport com.misit.abpenergy.Login.LoginActivityimport com.misit.abpenergy.Rimport com.misit.abpenergy.Utils.PopupUtilimport com.misit.abpenergy.Utils.PrefsUtilimport es.dmoral.toasty.Toastyimport kotlinx.android.synthetic.main.activity_new_inspeksi.*import retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseclass NewInspeksiActivity : AppCompatActivity(), ListInspeksiAdapter.OnItemClickListener {    private var idForm:String?=null    private var adapter: ListInspeksiAdapter? = null    private var subItems:MutableList<SubItemsModels>?=null    private var page : Int=1    private var loading : Boolean=false    var curentPosition: Int=0    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_new_inspeksi)        idForm = intent.getStringExtra(IDFORM)        var nameForm = intent.getStringExtra(NAMEFORM)        title = "FORM ${nameForm}".capitalize()        if(PrefsUtil.getInstance().getBooleanState("IS_LOGGED_IN",false)){            USERNAME = PrefsUtil.getInstance().getStringState(PrefsUtil.USER_NAME,"")        }else{            val intent = Intent(this, LoginActivity::class.java)            startActivity(intent)            finish()        }        subItems= ArrayList()        adapter = ListInspeksiAdapter(this@NewInspeksiActivity,subItems!!)        val linearLayoutManager = LinearLayoutManager(this@NewInspeksiActivity)        rvListInspeksi?.layoutManager = linearLayoutManager        rvListInspeksi.adapter =adapter        adapter?.setListener(this)        subItems?.clear()        loadInspeksi(idForm!!,page.toString())    }    fun loadInspeksi(idforms:String,hal:String){        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)        val call = apiEndPoint.getListSubInspeksi(idforms)        call?.enqueue(object : Callback<InspeksiGroupsResponse> {            override fun onFailure(call: Call<InspeksiGroupsResponse>, t: Throwable) {                Log.d("ERRORLOG",t.toString())                Toasty.error(this@NewInspeksiActivity,"Error : $t", Toasty.LENGTH_SHORT).show()                PopupUtil.dismissDialog()            }            override fun onResponse(call: Call<InspeksiGroupsResponse>, response: Response<InspeksiGroupsResponse>) {                var listInspeksi = response.body()                if (listInspeksi != null) {                    if (listInspeksi != null) {                        PopupUtil.showProgress(                            this@NewInspeksiActivity,                            "Loading...",                            "Memuat Form Inspeksi!"                        )                        loading = true                        listInspeksi.itemInspeksi!!.forEach {                            val subItem = SubItemsModels()                            var listItemArr: ArrayList<ItemsInspeksiModels>? = null                            listItemArr = ArrayList()                            subItem.nameSub = it.nameSub                            it.items!!.forEach {                                val itemInspeksi = ItemsInspeksiModels()                                itemInspeksi.idForm = it.idForm                                itemInspeksi.idList = it.idList                                itemInspeksi.idSub = it.idSub                                itemInspeksi.listInspeksi = it.listInspeksi                                itemInspeksi.flag = it.flag                                itemInspeksi.tglInput = it.tglInput                                listItemArr.add(itemInspeksi)                            }                            subItem.items = listItemArr                            subItems!!.add(subItem)                        }                        adapter?.notifyDataSetChanged()                        PopupUtil.dismissDialog()                    }                }            }        })    }    companion object{        var USERNAME="USERNAME"        var IDFORM = "IDFORM"        var NAMEFORM = "NAMEFORM"    }    override fun onItemClick(idForm: String, nameForm: String) {    }}