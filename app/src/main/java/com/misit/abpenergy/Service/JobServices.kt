package com.misit.abpenergy.Serviceimport android.app.job.JobParametersimport android.app.job.JobServiceimport android.os.CountDownTimerimport android.util.Logimport com.misit.abpenergy.HazardReport.SQLite.DataSource.HazardDetailDataSourceimport com.misit.abpenergy.HazardReport.SQLite.DataSource.HazardHeaderDataSourceimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.GlobalScopeimport kotlinx.coroutines.launchimport java.sql.SQLExceptionimport java.util.*class JobServices :JobService(){    private var TAG="JobScheduler"    private var jobCanceled = false    lateinit var timer: CountDownTimer    override fun onStartJob(params: JobParameters?): Boolean {        Log.d(TAG,"Jobs Started")        doBackgroundWork(params)        return true    }    override fun onStopJob(params: JobParameters?): Boolean {        Log.d(TAG,"Job Cancelation Before Completion")        timer.cancel()        jobCanceled=true        return false    }    private fun doBackgroundWork(params: JobParameters?) {        var i=1        timer = object: CountDownTimer(10000, 1000) {            override fun onTick(millisUntilFinished: Long) {                Log.d(TAG,"run: ${i}")                loadHazardSQL()                i++                if(jobCanceled) {                    return                }            }            override fun onFinish() {                jobFinished(params,false)                Log.d(TAG,"Job Finised")            }        }        timer.start()    }    private fun loadHazardSQL(){        GlobalScope.launch(Dispatchers.IO) {            val hazardHeader = HazardHeaderDataSource(this@JobServices)            try {                val hazardRow = hazardHeader.getAll()                hazardRow.forEach {                    val detail = HazardDetailDataSource(this@JobServices)                    val detailFirst = detail.getItem(it.idHazard.toString())                    if(detailFirst!=null){                        Log.d("HazardReport",it.deskripsi.toString())                        Log.d("HazardReport",detailFirst.tindakan.toString())                        Log.d("HazardReport",detailFirst.namaPJ.toString())                        Log.d("HazardReport",detailFirst.keterangan_update.toString())                    }                }            }catch (e: SQLException){                Log.d("HazardReport",e.toString())            }        }    }}