package com.misit.abpenergy.Serviceimport android.app.job.JobSchedulerimport android.content.Contextimport android.content.Intentimport android.util.Logimport androidx.appcompat.app.AppCompatActivityimport androidx.work.Workerimport androidx.work.WorkerParametersimport com.misit.abpenergy.HomePage.IndexActivityimport com.misit.abpenergy.Utils.ConfigUtilimport com.misit.abpenergy.Utils.Constantsclass HazardWorking(context: Context, workerParams: WorkerParameters) :Worker(context, workerParams) {    private var c = context    private var scheduler :JobScheduler?=null    override fun doWork(): Result {        scheduler = c.getSystemService(AppCompatActivity.JOB_SCHEDULER_SERVICE) as JobScheduler        var z =101        while (z<=1000){            if(z==1000){                processWork(c,"$z")                Log.d("WorkerManager","Success ${z} | ${c}")                return Result.success()            }            z++        }        workBackground()        return Result.success()    }    private fun workBackground(){        if(!ConfigUtil.isJobServiceOn(c, Constants.JOB_SERVICE_ID)){            ConfigUtil.jobScheduler(c,scheduler)        }    }    private fun processWork(c:Context,counter:String){        val intent = Intent(applicationContext,IndexActivity::class.java).apply {            flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK        }        var rCode = (100..1000).random()        ConfigUtil.showNotification(applicationContext,"Work Manager","Notification ${counter}",intent,rCode,"WorkManager")    }}