package com.misit.abpenergy.Sarpras.Serviceimport android.app.NotificationManagerimport android.content.Contextimport android.net.ConnectivityManagerimport android.util.Logimport android.widget.Toastimport androidx.appcompat.app.AlertDialogimport com.misit.abpenergy.Api.ApiClientimport com.misit.abpenergy.Api.ApiEndPointimport com.misit.abpenergy.Model.KaryawanModelimport com.misit.abpenergy.Sarpras.Realm.PenumpangModelimport com.misit.abpenergy.Utils.PrefsUtilimport io.realm.Realmimport io.realm.Sortimport kotlinx.coroutines.*import java.lang.Exceptionclass LoadSarana {    var listKaryawan : ArrayList<KaryawanModel>? = null    fun run(c:Context){        listKaryawan = ArrayList()        PrefsUtil.initInstance(c)        corutineSarana(c)    }    fun corutineSarana(c:Context){        listKaryawan?.clear()        var i = 1        val apiEndPoint = ApiClient.getClient(c)!!.create(ApiEndPoint::class.java)        GlobalScope.launch(Dispatchers.IO){            val response = apiEndPoint.corutineAllSarana()            if (response.isSuccessful) {                val r= response.body()?.karyawan                r.let {                    r?.forEach {//                        Log.d("listKaryawan",it.toString())                        listKaryawan?.add(                            KaryawanModel(                                i.toLong(),                                it.nik!!,                                it.nama!!,                                it.jabatan!!                            )                        )                    }                }                listPenumpang()            }else{                koneksiInActive(c)            }        }    }    fun listPenumpang(){        GlobalScope.launch(Dispatchers.IO) {            var realm = Realm.getDefaultInstance()            realm.executeTransaction {                var listPenumpang =                    realm?.where(PenumpangModel::class.java)                        ?.findAll()                Log.d("listPenumpang",listPenumpang.toString())                listPenumpang?.deleteAllFromRealm()                val penumpang = PenumpangModel()                listKaryawan?.forEach {                    Log.d("NamaLog", it.nama)                    penumpang.id = it.id                    penumpang.nama = it.nama                    penumpang.nik = it.nik                    penumpang.jabatan = it.jabatan                    try {                        realm.copyToRealm(penumpang)                        Log.d("karyawan", penumpang.toString())                    } catch (e: Exception) {                        Log.d("errorRealm", e.toString())                    }                }            }            realm.close()        }    }    fun koneksiInActive(c:Context){        AlertDialog.Builder(c)            .setTitle("Maaf Koneksi Internet Tidak Ada!")            .setPositiveButton("OK, Keluar", { dialog,                                               which ->            }).show()    }}