package com.misit.abpenergyimport android.content.Contextimport android.content.Intentimport android.content.pm.PackageInfoimport android.content.pm.PackageManagerimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.os.Handlerimport com.bumptech.glide.Glideimport com.misit.abpenergy.HomePage.IndexActivityimport com.misit.abpenergy.Login.LoginActivityimport com.misit.abpenergy.Master.ListUserActivityimport com.misit.abpenergy.Utils.ConfigUtilimport com.misit.abpenergy.Utils.PrefsUtilimport kotlinx.android.synthetic.main.activity_main_page.*import kotlinx.android.synthetic.main.menu_option.view.*import java.util.*class MainPageActivity : AppCompatActivity() {    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_main_page)        dirInit(this@MainPageActivity)    }    private fun firstInstall(c:Context){        if(PrefsUtil.getInstance().getBooleanState("INTRO_APP",false)){            loadingAnimate()        }else{            startActivity(Intent(c,IntroActivity::class.java))            finish()        }    }    fun loadingAnimate(){        val runnable= {            var besar = progressHorizontal.progress            progressHorizontal.progress = besar + 100            if(besar<100){                loadingAnimate()            } else {                if(PrefsUtil.getInstance().getBooleanState("IS_LOGGED_IN", false))                {                    val intent = Intent(this, IndexActivity::class.java)                    startActivity(intent)                }                else                {                    val intent = Intent(this, LoginActivity::class.java)                    startActivity(intent)                }                finish()            }        }        Handler().postDelayed(runnable, 100)    }    private fun dirInit(c:Context){        Glide.with(this).load(R.drawable.abp).into(imageView)        PrefsUtil.initInstance(this)        ConfigUtil.changeColor(this)        ConfigUtil.deleteInABPIMAGES(this@MainPageActivity,"ABP_IMAGES")        ConfigUtil.createFolder(this@MainPageActivity,"ABP_IMAGES")        ConfigUtil.createFolder(this@MainPageActivity,"PROFILE_IMAGE")        ConfigUtil.createFolder(this@MainPageActivity,"HAZARD_TEMP")        ConfigUtil.createFolder(this@MainPageActivity,"HAZARD_OFFLINE")        ConfigUtil.createFolder(this@MainPageActivity,"TEMUAN")        ConfigUtil.createFolder(this@MainPageActivity,"PENANGGUNG_JAWAB")        ConfigUtil.createFolder(this@MainPageActivity,"PERBAIKAN")        firstInstall(c)    }    fun versionApp(){        Use@ try {            val pInfo: PackageInfo = this.getPackageManager().getPackageInfo(packageName, 0)            tvVersionCode.text = pInfo.versionName        } catch (e: PackageManager.NameNotFoundException) {            e.printStackTrace()        }    }    companion object {        private  var TAG="MainPageLog"    }}